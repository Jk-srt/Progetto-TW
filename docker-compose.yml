services:
  # Database PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: taw-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: taw_flights
      POSTGRES_USER: taw_user
      POSTGRES_PASSWORD: taw_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - taw-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taw_user -d taw_flights"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - local

  # Backend Node.js/Express
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: taw-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      DATABASE_URL: postgresql://neondb_owner:npg_VATdkwzO94Wr@ep-holy-water-a2lusn2u-pooler.eu-central-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-secureTemporaryPwd}
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    volumes:
      - ./backend/package.json:/app/package.json:ro
      - ./backend/package-lock.json:/app/package-lock.json:ro
      - ./backend/src:/app/src:ro
      - backend_node_modules:/app/node_modules
      - ./database/postgres-init:/app/database-init:ro
    networks:
      - taw-network
    develop:
      watch:
        - action: sync
          path: backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package*.json

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: taw-frontend
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "4200:4200"
      - "49153:49153"
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/angular.json:/app/angular.json:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:ro   # se esiste
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - taw-network
    develop:
      watch:
        - action: sync
          path: frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package*.json

# Volumi persistenti
volumes:
  backend_node_modules:
    name: taw_backend_node_modules
  frontend_node_modules:
    name: taw_frontend_node_modules
  postgres_data:
    name: taw_postgres_data

# Rete personalizzata
networks:
  taw-network:
    name: taw-network
    driver: bridge
